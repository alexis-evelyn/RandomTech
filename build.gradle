plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-SNAPSHOT"
group = project.maven_group

configurations {
	deployerJars
}

repositories {
	maven {
		name = "Patchouli"
		url = "https://maven.blamejared.com/"
	}
	ivy {
		name = "Github Repos"
		url = "https://jitpack.io/"

		// This exists to force Gradle to ignore bad versioning information from commit based builds on JitPack
		metadataSources {
			artifact() // Look directly for artifact
		}

		layout "maven"
		patternLayout {
			artifact "[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"
			artifact "[organisation]/[module]/[revision]/[artifact]-[revision]-dev.[ext]"
			m2compatible = true
		}
	}
	maven {
		name = "CurseMaven"
		url = "https://www.cursemaven.com"
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://dl.bintray.com/ladysnake/libs'
	}
	maven {
		name = "Spinnery"
		url = "https://dl.bintray.com/spinnery/Spinnery"
	}
	maven {
		name "Siphalor's Maven"
		url "https://maven.siphalor.de"
	}
	maven {
		url "https://maven.tehnut.info"
	}
}

dependencies {
	deployerJars "io.packagecloud.maven.wagon:maven-packagecloud-wagon:0.0.6"

	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Reborn Core
	modImplementation "RebornCore:RebornCore-${project.reborn_core_version}"

	// Reborn's Energy API
	modImplementation "teamreborn:energy:${project.reborn_energy_version}"

	// Note: The Tags Being Broken Only Occur in a Dev Environment and Is A Fabric Bug: https://github.com/FabricMC/fabric/issues/66 - Example is #minecraft:planks
	// Tech Reborn (For Development Testing)
	modRuntime "TechReborn:TechReborn-${project.tech_reborn_version}"

	// Mod Menu
	modImplementation "io.github.prospector:modmenu:${project.mod_menu_version}"

	// AutoConfig for Use With Mod Menu
	modCompile "me.sargunvohra.mcmods:autoconfig1u:${project.autoconf_version}"
	include "me.sargunvohra.mcmods:autoconfig1u:${project.autoconf_version}"

	// Hywla
	// The TehNut Maven Repo Slows Down Gradle Way Too Much
	// I am currently building from my own repo as Jitpack failed to build Hwyla the first time due to OOM Exception and Jitpack doesn't rebuild builds unless you own the repo.
	modCompile ("mcp.mobius.waila:Hwyla:${project.hywla_version}:api")
	// modRuntime ("mcp.mobius.waila:Hwyla:${project.hywla_version}") // TODO: Fix
	// modImplementation "com.github.alexis-evelyn:HWYLA:${project.hywla_github_version}"

	// Roughly Enough Items
	modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"

	// AppleSkin
	modRuntime "com.github.squeek502:AppleSkin:${project.appleskin_version}"

	// Patchouli API
	// modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}" - 1.16-37
	modCompile "vazkii.patchouli:Patchouli:${project.patchouli_version}:api"
	// modRuntime "vazkii.patchouli:Patchouli:${project.patchouli_version}" // TODO: Fix

	// Used to speed Minecraft up in dev environment. Breaks compatibility with old worlds
	modRuntime ("com.github.SuperCoder7979:databreaker:${project.databreaker_version}") {
		exclude module: "fabric-loader"
	}

	// Improves Performance of FPS and Rendering Engine
	// Currently breaks fluid rendering - See https://github.com/jellysquid3/sodium-fabric/issues/5
	// modRuntime "com.github.jellysquid3:sodium-fabric:${project.sodium_version}" // Skip

	// General Purpose Performance Improvement
	// modRuntime "com.github.jellysquid3:lithium-fabric:${project.lithium_version}" // TODO: Fix - VoronoiBiomeAccessType.method_22399

	// Improves performance of lighting engine
	modRuntime "com.github.jellysquid3:phosphor-fabric:${project.phosphor_version}"

	// Permission Granted From: https://discordapp.com/channels/507304429255393322/507982478276034570/730955439390326894 - Screenshots: https://imgur.com/a/R9xMlhX
	modCompile "com.github.nuclearfarts:connected-block-textures:${project.connected_block_textures_version}"
	include "com.github.nuclearfarts:connected-block-textures:${project.connected_block_textures_version}"

	// Used to allow customizing data of items and other things
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_components_version}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cardinal_components_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cardinal_components_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_components_version}"

	// Dependencies of Astromine
	modRuntime "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:${project.cardinal_components_version}"
	modRuntime "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-chunk:${project.cardinal_components_version}"
	modRuntime "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cardinal_components_version}"
	modRuntime "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-level:${project.cardinal_components_version}"
	modRuntime "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-world:${project.cardinal_components_version}"
	modRuntime "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-util:${project.cardinal_components_version}"
	modRuntime "com.github.vini2003:spinnery:${project.spinnery_version}"
	modRuntime "com.github.Draylar:LibStructure:${project.libstructure_version}"
	modRuntime "com.terraformersmc:shapes:${project.shapes_version}"

	/* Astromine Mod - A new tech mod.
	 * Going to investigate if I need to add special support for it.
	 * This mod uses RebornCore and LBA.
	 * LBA should be compatible with RebornCore, so if it is, I won't need to add custom support.
	 */
	// modRuntime "com.github.Chainmail-Studios:Astromine:${project.astromine_version}" // TODO: Fix

	// For Shaders - https://github.com/Ladysnake/Satin/blob/master/README.md
	modImplementation "io.github.ladysnake:Satin:${project.satin_version}"
	include "io.github.ladysnake:Satin:${project.satin_version}"

	// Carpet - Useful for Debugging Minecraft in General
	modRuntime "com.github.gnembon:fabric-carpet:${project.carpet_version}"

	// For NBT Crafting - https://github.com/Siphalor/nbt-crafting/blob/1.16-2.0/README.md
	modImplementation "de.siphalor:nbtcrafting-1.16:${project.nbt_crafting_version}"
	include "de.siphalor:nbtcrafting-1.16:${project.nbt_crafting_version}"

	// For Extra Annotations
	// https://mvnrepository.com/artifact/com.google.errorprone/error_prone_annotations
	// compile group: 'com.google.errorprone', name: 'error_prone_annotations', version: '2.4.0'

	// Applied Energistics 2
	// modRuntime "com.github.AppliedEnergistics:Applied-Energistics-2:${project.applied_energistics_version}" // TODO: Test

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE.md"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

//uploadArchives {
//	repositories.mavenDeployer {
//		configuration = configurations.deployerJars
//		repository(url: "packagecloud+https://packagecloud.io/AlexisEvelyn/RandomTech") {
//			authentication(password: MAVEN_API_KEY)
//		}
//	}
//}
