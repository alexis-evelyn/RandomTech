plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${project.mod_version}-SNAPSHOT"
group = project.maven_group

configurations {
	deployerJars
}

repositories {
	maven {
		name "Patchouli"
		url "https://maven.blamejared.com/"
	}
	ivy {
		name "Github Repos"
		url "https://jitpack.io/"

		// This exists to force Gradle to ignore bad versioning information from commit based builds on JitPack
		metadataSources {
			artifact() // Look directly for artifact
		}

		layout "maven"
		patternLayout {
			artifact "[organisation]/[module]/[revision]/[artifact]-[revision].[ext]"
			artifact "[organisation]/[module]/[revision]/[artifact]-[revision]-dev.[ext]"
			m2compatible = true
		}
	}
	maven {
		name "Ladysnake Libs"
		url "https://dl.bintray.com/ladysnake/libs"
	}
	maven {
		name "NBT Crafting"
		url "https://maven.siphalor.de"
	}
	maven {
		name "Hwyla"
		url "https://maven.tehnut.info"
	}
}

dependencies {
	deployerJars "io.packagecloud.maven.wagon:maven-packagecloud-wagon:0.0.6"

	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Reborn Core
	modImplementation "RebornCore:RebornCore-${project.reborn_core_version}"

	// Reborn's Energy API
	modImplementation "teamreborn:energy:${project.reborn_energy_version}"

	// Mod Menu
	modImplementation "io.github.prospector:modmenu:${project.mod_menu_version}"

	// AutoConfig for Use With Mod Menu
	modImplementation "me.sargunvohra.mcmods:autoconfig1u:${project.autoconf_version}"
	include "me.sargunvohra.mcmods:autoconfig1u:${project.autoconf_version}"

	// Hywla
	modImplementation "mcp.mobius.waila:Hwyla:${project.hywla_version}" // Same fix as on Patchouli. the fix was that loom currently cannot handle depending on artifacts with the same ID but different classifier (regular patchouli jar vs :api)

	// Roughly Enough Items
	modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}" // TODO: Fix - Recipe Display Crashes Game

	// Patchouli API - TODO: Update to non-snapshot version when released
	modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}" // Note: https://discordapp.com/channels/507304429255393322/507982478276034570/745174055383990372

	// Permission Granted From: https://discordapp.com/channels/507304429255393322/507982478276034570/730955439390326894 - Screenshots: https://imgur.com/a/R9xMlhX
	modImplementation "com.github.nuclearfarts:connected-block-textures:${project.connected_block_textures_version}"
	include "com.github.nuclearfarts:connected-block-textures:${project.connected_block_textures_version}"

	// Used to allow customizing data of items and other things
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_components_version}"
	modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cardinal_components_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-item:${project.cardinal_components_version}"
	include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cardinal_components_version}"

	// For Shaders - https://github.com/Ladysnake/Satin/blob/master/README.md
	modImplementation "io.github.ladysnake:Satin:${project.satin_version}"
	include "io.github.ladysnake:Satin:${project.satin_version}"

	// For NBT Crafting - https://github.com/Siphalor/nbt-crafting/blob/1.16-2.0/README.md
	modImplementation "de.siphalor:nbtcrafting-1.16:${project.nbt_crafting_version}"
	include "de.siphalor:nbtcrafting-1.16:${project.nbt_crafting_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE.md"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}

/* https://discordapp.com/channels/507304429255393322/507982478276034570/745174375753449543
 *
 * modCompile - outdated, don't use.
 * modImplementation -> if someone depends on YOUR mod, they get this dependency as runtime dependency, but can't reference its code
 * modApi -> if someone depends on your mod, they get this dependency as compile time dependency, and can reference its code directly
 */

// Separating Runtime Only Dependencies From Other Dependencies
apply from: 'runtime-only-dependencies.gradle'