# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
# Useful Debugging Info: https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-a-debug-message
# Run Actions Locally: https://github.com/nektos/act

name: Build Mod

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - '.github/workflows/codeql-analysis.yml'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup Debug Vars
      id: debugvars
      run: date
      env:
        ENABLE_PUBLISHING: ${{ secrets.ENABLE_PUBLISHING }}
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Gradle Setup Cache
      uses: actions/cache@v2
      with:
        path: |
          .gradle
          api/.gradle
        key: ${{ runner.os }}-setup-cache-${{ hashFiles('**/*.gradle*') }}
        restore-keys: ${{ runner.os }}-setup-cache-
    - name: Gradle Build Cache
      uses: actions/cache@v2
      with:
        path: |
          build
          api/build
          !build/libs
          !api/build/libs
        key: ${{ runner.os }}-build-cache-${{ hashFiles('**/*.java*') }}
        restore-keys: ${{ runner.os }}-build-cache-
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
#    - name: Build Only (Meant to Be Used Locally Only For Debugging)
#      if: !startsWith(steps.debugvars.outputs.ENABLE_PUBLISHING, 'true')
#      run: ./gradlew build -g build/.gradle
#      env:
#        CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }} # Cause for some reason the CurseGradle plugin evaluates here too
    - name: Build And Publish To Sonatype
      if: startsWith(steps.debugvars.outputs.ENABLE_PUBLISHING, 'true')
      run: ./gradlew publish -g build/.gradle
      env:
        BINTRAY_GPG_KEY: ${{ secrets.BINTRAY_GPG_KEY }}
        BINTRAY_GPG_PASSWORD: ${{ secrets.BINTRAY_GPG_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }} # Cause for some reason the CurseGradle plugin evaluates here too
      continue-on-error: false
    - name: Setup Vars For Release Booleans and Version Info
      run: |
        # For Setting Up Independent Release Booleans
        strings gradle.properties | grep mod_version | cut -d' ' -f3 | grep -q SNAPSHOT && echo ::set-env name=RANDOMTECH_RELEASE::false || echo ::set-env name=RANDOMTECH_RELEASE::true
        strings api/gradle.properties | grep mod_version | cut -d' ' -f3 | grep -q SNAPSHOT && echo ::set-env name=API_RELEASE::false || echo ::set-env name=API_RELEASE::true

        # For Setting Up Independent Version Vars
        echo ::set-env name=RANDOMTECH_VERSION::$( strings gradle.properties | grep mod_version | cut -d' ' -f3 )
        echo ::set-env name=API_VERSION::$( strings api/gradle.properties | grep mod_version | cut -d' ' -f3 )
    - name: Setup Vars For Main Release Boolean and Version Info
      run: |
        # For Setting Up Main Release Boolean
        echo ::set-env name=RELEASE::false
        test "$API_RELEASE" = "true" && echo ::set-env name=RELEASE::true
        test "$RANDOMTECH_RELEASE" = "true" && echo ::set-env name=RELEASE::true

        # For Setting Up Main Version Var - Currently Assuming That RandomTech Version is Desired Version Number
        echo ::set-env name=VERSION::$( echo $RANDOMTECH_VERSION )
    - name: Test Result Vars (For Debugging)
      run: |
        echo "Release: '$RELEASE' - API: '$API_RELEASE' - RandomTech: '$RANDOMTECH_RELEASE'"
        echo "Version: '$VERSION' - API: '$API_VERSION' - RandomTech: '$RANDOMTECH_VERSION'"
    - name: Upload Compiled Mods to Github Actions For Review
      uses: actions/upload-artifact@v2
      with:
        name: Compiled-Mods
        path: |
          build/libs/*
          api/build/libs/*
    - name: Setup Git Credentials For Tagging
      uses: oleksiyrudenko/gha-git-credentials@v1
      if: startsWith(env.RELEASE, 'true') && startsWith(steps.debugvars.outputs.ENABLE_PUBLISHING, 'true')
      with:
        name: 'Automated Tag'
        email: 'automated-tag@alexisevelyn.me'
        actor: ${{ github.actor }}
        token: ${{ secrets.TOKEN_AUTOTAG_CREATOR }}
    - name: Update Tag If Release
      if: startsWith(env.RELEASE, 'true') && startsWith(steps.debugvars.outputs.ENABLE_PUBLISHING, 'true')
      run: |
        # Causes Incorrect Version Info (If Pushing Snapshot Before This Is Ran) - git pull --ff-only
        git tag -a v${{ env.VERSION }} -m "Automatically Generated Tag For Release v${{ env.VERSION }}" $GITHUB_SHA
        git push origin v${{ env.VERSION }}
    - name: Attempt Close/Release
      if: startsWith(env.RELEASE, 'true') && startsWith(steps.debugvars.outputs.ENABLE_PUBLISHING, 'true')
      run: ./gradlew closeAndReleaseRepository -g build/.gradle
      env:
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }} # Cause for some reason the CurseGradle plugin evaluates here too
    - name: Generate Changelog
      uses: heinrichreimer/github-changelog-generator-action@v2.1.1
      with: # https://github.com/heinrichreimer/action-github-changelog-generator/blob/master/README.md and https://github.com/github-changelog-generator/github-changelog-generator/blob/master/README.md
        token: ${{ secrets.GITHUB_TOKEN }}
        stripGeneratorNotice: "true"
        stripHeaders: "false"
        onlyLastTag: "false"
        verbose: "true"
        # releaseUrl: "https://github.com/alexis-evelyn/RandomTech/tree/v${{ env.VERSION }}"
        unreleased: "true"
        issueLineLabels: "ALL"
    - name: Upload Generated Changelog For Review
      uses: actions/upload-artifact@v2
      with:
        name: Generated-Changelog
        path: ${{ github.workspace }}/CHANGELOG.md
    - name: Upload RandomTech to Curseforge
      if: startsWith(env.RANDOMTECH_RELEASE, 'true') && startsWith(steps.debugvars.outputs.ENABLE_PUBLISHING, 'true')
      # :publishCurseforge as opposed to publishCurseforge is intentional to only run the task for root
      run: ./gradlew :publishCurseforge -g build/.gradle
      env:
        CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}
        GITHUB_WORKSPACE: ${{ github.workspace }}
    - name: Upload API to Curseforge
      if: startsWith(env.API_RELEASE, 'true') && startsWith(steps.debugvars.outputs.ENABLE_PUBLISHING, 'true')
      run: ./gradlew :api:publishCurseforge -g build/.gradle
      env:
        CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}
        GITHUB_WORKSPACE: ${{ github.workspace }}
    - name: Alert Discord to New API Release
      if: startsWith(env.API_RELEASE, 'true') && startsWith(steps.debugvars.outputs.ENABLE_PUBLISHING, 'true')
      continue-on-error: true
      run: |
        # For Sending API Download Webhook to Discord
        curl \
        -H 'Content-Type: application/json' ${{ secrets.DISCORD_RELEASES_WEBHOOK_URL }} \
        --data-binary @- << EOF
        {
          "content": "API Download: [v$API_VERSION](https://www.curseforge.com/minecraft/mc-mods/randomtech-api/files/$API_FILE_ID)",
          "avatar_url": "https://raw.githubusercontent.com/alexis-evelyn/RandomTech/master/api/src/main/resources/pack.png",
          "embeds": [
            {
              "title": "API v$API_VERSION",
              "description": "New Version Released",
              "url": "https://www.curseforge.com/minecraft/mc-mods/randomtech-api/files/$API_FILE_ID",
              "color": 1522491
            }
          ]
        }
        EOF
    - name: Alert Discord to New RandomTech Release
      if: startsWith(env.RANDOMTECH_RELEASE, 'true') && startsWith(steps.debugvars.outputs.ENABLE_PUBLISHING, 'true')
      continue-on-error: true
      run: |
        # Useful Links:
        # https://discord.com/developers/docs/resources/webhook
        # https://discord.com/developers/docs/resources/channel#embed-object

        # For Sending RandomTech Download Webhook to Discord
        curl \
        -H 'Content-Type: application/json' ${{ secrets.DISCORD_RELEASES_WEBHOOK_URL }} \
        --data-binary @- << EOF
        {
          "content": "RandomTech Download: [v$RANDOMTECH_VERSION](https://www.curseforge.com/minecraft/mc-mods/randomtech/files/$RANDOMTECH_FILE_ID)",
          "avatar_url": "https://raw.githubusercontent.com/alexis-evelyn/RandomTech/master/src/main/resources/pack.png",
          "embeds": [
            {
              "title": "RandomTech v$RANDOMTECH_VERSION",
              "description": "New Version Released",
              "url": "https://www.curseforge.com/minecraft/mc-mods/randomtech/files/$RANDOMTECH_FILE_ID",
              "color": 11540510
            }
          ]
        }
        EOF